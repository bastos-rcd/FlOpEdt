stages:
  - build
  - lint
  - test
  - deploy

cache:
  paths:
    - FlOpEDT-front/node_modules
    - .cache/pip

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DJANGO_SETTINGS_MODULE: "FlOpEDT.settings.development"
  POSTGRES_DB: "postgres"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: "postgres"
  POSTGRES_HOST_AUTH_METHOD: "trust"
  REDIS_HOST: "redis"
  EMAIL_HOST: "maildev"
  EMAIL_PORT: "1025"

.python:
  image: python:3.11-alpine
  services:
    - postgres:alpine
  before_script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt

.python-full:
  extends: .python
  services:
    - postgres:alpine
    - redis:alpine
    - maildev/maildev:latest

.node:
  image: node:alpine
  before_script:
    - node --version ; yarn --version  # For debugging
    - cd FlOpEDT-front ; yarn --frozen-lockfile ; cd ..

.fullstack:
  extends: .python-full
  image: python:3.11  # Alpine uses a good libc (musl), but browsers rely on glibc :pensive:
  before_script:
    - !reference [.python, before_script]
    # Debian repositories are a bit of a nightmare here
    # This works around some of the pitfalls with installing yarnpkg directly :shrug:
    - apt -qq update ; apt -qq install -y nodejs npm ; npm i -g yarn
    - !reference [.node, before_script]

include:
  - local: '.gitlab/ci/backend-ci.yml'
  - local: '.gitlab/ci/webapp-ci.yml'
  - local: '.gitlab/ci/build-ci.yml'
  # - local: '.gitlab/ci/deploy.yml'
